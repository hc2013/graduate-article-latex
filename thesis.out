\BOOKMARK [0][-]{cover.0}{NJU Cover}{}% 1
\BOOKMARK [0][-]{abstract.0}{摘　要}{}% 2
\BOOKMARK [0][-]{englishabstract.0}{Abstract}{}% 3
\BOOKMARK [0][-]{chapter*.1}{目 \040录}{}% 4
\BOOKMARK [0][-]{chapter.1}{第一章 \040引言}{}% 5
\BOOKMARK [1][-]{section.1.1}{1.1 项目背景}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.2}{1.2 国内外相关系统的发展概况}{chapter.1}% 7
\BOOKMARK [2][-]{subsection.1.2.1}{1.2.1 国内\(外\)轨迹数据系统发展概况}{section.1.2}% 8
\BOOKMARK [2][-]{subsection.1.2.2}{1.2.2 国内（外）地图瓦片数据系统发展概况}{section.1.2}% 9
\BOOKMARK [1][-]{section.1.3}{1.3 本文的主要工作}{chapter.1}% 10
\BOOKMARK [1][-]{section.1.4}{1.4 本文的组织结构}{chapter.1}% 11
\BOOKMARK [0][-]{chapter.2}{第二章 \040相关技术概念综述}{}% 12
\BOOKMARK [1][-]{section.2.1}{2.1 优先点树}{chapter.2}% 13
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 NN问题}{section.2.1}% 14
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 优先点树概述}{section.2.1}% 15
\BOOKMARK [2][-]{subsection.2.1.3}{2.1.3 优先点树的基本原理}{section.2.1}% 16
\BOOKMARK [2][-]{subsection.2.1.4}{2.1.4 最简单优先点树的结构和搜索过程}{section.2.1}% 17
\BOOKMARK [1][-]{section.2.2}{2.2 Lucene}{chapter.2}% 18
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 简介}{section.2.2}% 19
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 运行原理}{section.2.2}% 20
\BOOKMARK [2][-]{subsection.2.2.3}{2.2.3 核心数据结构}{section.2.2}% 21
\BOOKMARK [2][-]{subsection.2.2.4}{2.2.4 为什么选择lucene}{section.2.2}% 22
\BOOKMARK [1][-]{section.2.3}{2.3 地理相关技术概念介绍}{chapter.2}% 23
\BOOKMARK [2][-]{subsection.2.3.1}{2.3.1 地理坐标与投影法}{section.2.3}% 24
\BOOKMARK [2][-]{subsection.2.3.2}{2.3.2 地图瓦片}{section.2.3}% 25
\BOOKMARK [2][-]{subsection.2.3.3}{2.3.3 瓦片地图金字塔}{section.2.3}% 26
\BOOKMARK [1][-]{section.2.4}{2.4 Nodejs Express框架}{chapter.2}% 27
\BOOKMARK [1][-]{section.2.5}{2.5 本章总结}{chapter.2}% 28
\BOOKMARK [0][-]{chapter.3}{第三章 \040系统需求分析与概要设计}{}% 29
\BOOKMARK [1][-]{section.3.1}{3.1 GTDS系统概述}{chapter.3}% 30
\BOOKMARK [1][-]{section.3.2}{3.2 轨迹数据服务需求分析}{chapter.3}% 31
\BOOKMARK [2][-]{subsection.3.2.1}{3.2.1 轨迹数据服务的功能需求}{section.3.2}% 32
\BOOKMARK [2][-]{subsection.3.2.2}{3.2.2 轨迹数据服务的非功能需求}{section.3.2}% 33
\BOOKMARK [2][-]{subsection.3.2.3}{3.2.3 轨迹数据服务用例图}{section.3.2}% 34
\BOOKMARK [2][-]{subsection.3.2.4}{3.2.4 初始建立轨迹索引用例描述表}{section.3.2}% 35
\BOOKMARK [2][-]{subsection.3.2.5}{3.2.5 插入新数据用例描述表}{section.3.2}% 36
\BOOKMARK [2][-]{subsection.3.2.6}{3.2.6 相似轨迹检索用例描述表}{section.3.2}% 37
\BOOKMARK [1][-]{section.3.3}{3.3 瓦片数据服务需求分析}{chapter.3}% 38
\BOOKMARK [2][-]{subsection.3.3.1}{3.3.1 瓦片数据服务的需求综述}{section.3.3}% 39
\BOOKMARK [2][-]{subsection.3.3.2}{3.3.2 瓦片数据服务功能需求}{section.3.3}% 40
\BOOKMARK [2][-]{subsection.3.3.3}{3.3.3 瓦片数据服务非功能需求}{section.3.3}% 41
\BOOKMARK [2][-]{subsection.3.3.4}{3.3.4 瓦片数据服务用例图}{section.3.3}% 42
\BOOKMARK [2][-]{subsection.3.3.5}{3.3.5 瓦片数据服务用例描述}{section.3.3}% 43
\BOOKMARK [2][-]{subsection.3.3.6}{3.3.6 b-box更新地图瓦片数据用例描述表}{section.3.3}% 44
\BOOKMARK [2][-]{subsection.3.3.7}{3.3.7 特定区域瓦片数据中心渲染用例描述表}{section.3.3}% 45
\BOOKMARK [1][-]{section.3.4}{3.4 GTDS系统概要设计}{chapter.3}% 46
\BOOKMARK [1][-]{section.3.5}{3.5 本章总结}{chapter.3}% 47
\BOOKMARK [0][-]{chapter.4}{第四章 \040系统详细设计与实现}{}% 48
\BOOKMARK [1][-]{section.4.1}{4.1 轨迹检索服务详细设计}{chapter.4}% 49
\BOOKMARK [2][-]{subsection.4.1.1}{4.1.1 概述}{section.4.1}% 50
\BOOKMARK [2][-]{subsection.4.1.2}{4.1.2 优先点树索引类图}{section.4.1}% 51
\BOOKMARK [2][-]{subsection.4.1.3}{4.1.3 优先点树节点结构}{section.4.1}% 52
\BOOKMARK [2][-]{subsection.4.1.4}{4.1.4 初始建树的流程}{section.4.1}% 53
\BOOKMARK [2][-]{subsection.4.1.5}{4.1.5 初始建树算法实现}{section.4.1}% 54
\BOOKMARK [2][-]{subsection.4.1.6}{4.1.6 设计要点1：使用长度栈和偏移量栈记录内存状态，避免冗余内存}{section.4.1}% 55
\BOOKMARK [2][-]{subsection.4.1.7}{4.1.7 设计要点2：优先点的选择算法}{section.4.1}% 56
\BOOKMARK [2][-]{subsection.4.1.8}{4.1.8 KNN问题的定义和解决思路}{section.4.1}% 57
\BOOKMARK [2][-]{subsection.4.1.9}{4.1.9 设计焦点：容忍距离的收敛起点和收敛速度}{section.4.1}% 58
\BOOKMARK [2][-]{subsection.4.1.10}{4.1.10 检索算法实现思路概述}{section.4.1}% 59
\BOOKMARK [2][-]{subsection.4.1.11}{4.1.11 检索算法流程图}{section.4.1}% 60
\BOOKMARK [2][-]{subsection.4.1.12}{4.1.12 本文的算法实现的代码}{section.4.1}% 61
\BOOKMARK [2][-]{subsection.4.1.13}{4.1.13 设计焦点2：避免重复访问}{section.4.1}% 62
\BOOKMARK [2][-]{subsection.4.1.14}{4.1.14 优先点树的插入}{section.4.1}% 63
\BOOKMARK [2][-]{subsection.4.1.15}{4.1.15 Insert操作算法概述}{section.4.1}% 64
\BOOKMARK [2][-]{subsection.4.1.16}{4.1.16 Insert操作算法细节1：根节点不分裂，树的高度不变}{section.4.1}% 65
\BOOKMARK [2][-]{subsection.4.1.17}{4.1.17 Insert操作算法细节2：以最小扇出度作为初始建树的终止条件}{section.4.1}% 66
\BOOKMARK [2][-]{subsection.4.1.18}{4.1.18 Insert操作算法细节3：分裂与数据重分布的优先级问题}{section.4.1}% 67
\BOOKMARK [2][-]{subsection.4.1.19}{4.1.19 Insert操作算法细节4：存储数据点距离顺序}{section.4.1}% 68
\BOOKMARK [2][-]{subsection.4.1.20}{4.1.20 Insert操作算法细节4：非节点数据未满的判断}{section.4.1}% 69
\BOOKMARK [2][-]{subsection.4.1.21}{4.1.21 Insert操作算法综述}{section.4.1}% 70
\BOOKMARK [2][-]{subsection.4.1.22}{4.1.22 插入算法流程图}{section.4.1}% 71
\BOOKMARK [2][-]{subsection.4.1.23}{4.1.23 Insert算法实现1：已满叶节点的分裂}{section.4.1}% 72
\BOOKMARK [2][-]{subsection.4.1.24}{4.1.24 Insert算法实现2：叶节点数据重分布}{section.4.1}% 73
\BOOKMARK [2][-]{subsection.4.1.25}{4.1.25 Insert算法实现3：分支分裂}{section.4.1}% 74
\BOOKMARK [1][-]{section.4.2}{4.2 地图瓦片服务详细设计}{chapter.4}% 75
\BOOKMARK [2][-]{subsection.4.2.1}{4.2.1 概述}{section.4.2}% 76
\BOOKMARK [2][-]{subsection.4.2.2}{4.2.2 地图局部更新功能概述}{section.4.2}% 77
\BOOKMARK [2][-]{subsection.4.2.3}{4.2.3 地图局部更新功能流程图}{section.4.2}% 78
\BOOKMARK [2][-]{subsection.4.2.4}{4.2.4 地图局部更新功能代码实现}{section.4.2}% 79
\BOOKMARK [2][-]{subsection.4.2.5}{4.2.5 更新一致性的原理}{section.4.2}% 80
\BOOKMARK [2][-]{subsection.4.2.6}{4.2.6 更新一致性的关键代码实现}{section.4.2}% 81
\BOOKMARK [1][-]{section.4.3}{4.3 本章总结}{chapter.4}% 82
\BOOKMARK [0][-]{chapter.5}{第五章 \040总结和展望}{}% 83
\BOOKMARK [1][-]{section.5.1}{5.1 总结}{chapter.5}% 84
\BOOKMARK [1][-]{section.5.2}{5.2 进一步工作展望}{chapter.5}% 85
\BOOKMARK [0][-]{chapter*.4}{参考文献}{}% 86
\BOOKMARK [0][-]{chapter*.5}{简历与科研成果}{}% 87
\BOOKMARK [0][-]{chapter*.6}{致 \040谢}{}% 88
